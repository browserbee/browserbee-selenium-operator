{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>BrowserBee Selenium Operator is a Kubernetes\u2011native solution that lets you define, deploy, and scale Selenium Grid resources using Custom Resource Definitions (CRDs). Manage your browser\u2011automation infrastructure the same way you manage the rest of your cloud\u2011native stack\u2014declaratively, version\u2011controlled, and GitOps\u2011friendly.</p> <p>Whether you are experimenting locally or orchestrating hundreds of parallel test sessions in production, this documentation will guide you from first cluster to advanced tuning.</p>"},{"location":"#why-browserbee-selenium-operator","title":"Why BrowserBee Selenium Operator?","text":"Challenge Traditional Approach Operator Advantage Environment drift Hand\u2011crafted YAML or imperative <code>kubectl</code> commands Declarative CRDs version\u2011controlled in Git Upgrades &amp; scaling Manual image bumps and replica tweaks Reconciliation loop keeps desired state Developer onboarding Tribal knowledge &amp; runbooks One\u2011liner <code>kubectl apply</code> installs Grid Multi\u2011cluster adoption Re\u2011implement configs per cluster Re\u2011use the same CRDs everywhere <p>DX Tip\ufe0f Store your CRDs in the same repo as your application code and let Argo CD or Flux apply them automatically. This turns Selenium Grid changes into pull\u2011request reviews, CI checks, and instant rollbacks.</p>"},{"location":"#architecture","title":"Architecture","text":"<pre><code>flowchart TD\n    subgraph Kubernetes Cluster\n        direction LR\n        Operator[\"BrowserBee&lt;br&gt;Selenium Operator\"]\n        CRD[SeleniumGrid CRD]\n        Hub[Selenium Hub Deployment]\n        Nodes[Selenium Node StatefulSets]\n    end\n    Operator -- watches --&gt; CRD\n    Operator -- manages --&gt; Hub &amp; Nodes\n</code></pre> <ul> <li>The Operator reconciles every <code>SeleniumGrid</code> CR instance.</li> <li>A Hub deployment receives session requests.</li> <li>One or more Node StatefulSets register with the Hub to execute browser sessions.</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>kubectl \u2265 1.25</li> <li>kind \u2265 0.20 (or any Kubernetes 1.25+ cluster)</li> </ul>"},{"location":"#1-create-a-local-cluster","title":"1 \u2014 Create a local cluster","text":"<pre><code>kind create cluster --name selenium-cluster\n</code></pre>"},{"location":"#2-install-the-operator","title":"2 \u2014 Install the Operator","text":"<pre><code>kubectl apply -f https://raw.githubusercontent.com/browserbee/browserbee-selenium-operator/main/manifests/install.yaml\n</code></pre> <p>This installs all components in the <code>browserbee-selenium-operator-system</code> namespace.</p> <p>Tip\ufe0f Watch the rollout live: <code>kubectl -n browserbee-selenium-operator-system get pods -w</code></p>"},{"location":"#3-spin-up-a-selenium-grid","title":"3 \u2014 Spin up a Selenium Grid","text":"<pre><code>kubectl apply -f https://raw.githubusercontent.com/browserbee/browserbee-selenium-operator/main/manifests/selenium-grid/install.yaml\n</code></pre>"},{"location":"#4-verify","title":"4 \u2014 Verify","text":"<pre><code>kubectl get seleniumgrids\nkubectl get svc selenium-hub -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'\n</code></pre> <p>Open the Grid console in your browser and start testing!</p>"},{"location":"#manifests","title":"Manifests","text":"<p>Use the ready\u2011made samples to get productive in seconds:</p> Example Description <code>selenium-grid.yaml</code> Full Selenium Grid with hub, Chrome &amp; Firefox nodes <code>selenium-hub.yaml</code> Kubernetes deployment that runs a Selenium hub <code>selenium-node.yaml</code> Kubernetes deployment that runs a Selenium node <code>selenium-standalone.yaml</code> Kubernetes deployment that runs a Selenium standalone node"},{"location":"#selenium-grid","title":"Selenium Grid","text":"<pre><code>kubectl apply -f https://raw.githubusercontent.com/browserbee/browserbee-selenium-operator/refs/heads/main/config/samples/selenium-grid_v1_seleniumgrid.yaml\n</code></pre>"},{"location":"#selenium-hub","title":"Selenium Hub","text":"<pre><code>kubectl apply -f https://raw.githubusercontent.com/browserbee/browserbee-selenium-operator/refs/heads/main/config/samples/selenium-hub_v1_seleniumhub.yaml\n</code></pre>"},{"location":"#selenium-node","title":"Selenium Node","text":"<pre><code>kubectl apply -f https://raw.githubusercontent.com/browserbee/browserbee-selenium-operator/refs/heads/main/config/samples/selenium-node_v1_seleniumnode.yaml\n</code></pre>"},{"location":"#selenium-standalone-node","title":"Selenium Standalone Node","text":"<pre><code>kubectl apply -f https://raw.githubusercontent.com/browserbee/browserbee-selenium-operator/refs/heads/main/config/samples/selenium-standalone_v1_seleniumstandalone.yaml\n</code></pre>"},{"location":"#features","title":"Features","text":"<ul> <li>Declarative CRDs \u2014 define Hub, Nodes, browser versions, and autoscaling rules in YAML.</li> <li>Zero\u2011downtime upgrades \u2014 rolling updates handled by the Operator.</li> <li>Autoscaling \u2014 integrate with the Kubernetes Horizontal Pod Autoscaler.</li> <li>Multi\u2011version support \u2014 run multiple browser versions side\u2011by\u2011side.</li> <li>Metrics &amp; observability - scrape Prometheus metrics out\u2011of\u2011the\u2011box; dashboards included.</li> <li>Extensible \u2014 add custom node images, sidecars, or plugins via standard Kubernetes patterns.</li> </ul>"},{"location":"#next-steps","title":"Next Steps","text":"<ol> <li>Helm Chart \u2014 package your Grid and ship it to any cluster.</li> <li>GitOps \u2014 integrate with Argo CD or Flux for continuous delivery.</li> <li>CI Integration \u2014 point your test runners to the Grid service endpoint.</li> <li>Observability \u2014 import the provided Grafana dashboards and alerting rules.</li> </ol>"},{"location":"#community-support","title":"Community &amp; Support","text":"<ul> <li>Slack: Join the conversation and get help from maintainers.</li> <li>GitHub Discussions: Ask questions, propose features, and share tips.</li> <li>Contributing Guide: PRs welcome! See <code>CONTRIBUTING.md</code>.</li> </ul>    Not affiliated with the official SeleniumHQ project."}]}